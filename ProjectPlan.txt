

1. 로그인 화면 (온라인 모드 구현 완료)
메인 화면에서는 SQL에 접속하기 위한 

지속적인 데이터 관리를 위해서는 MySQL을 이용하게 된다.

오프라인 모드의 경우 구현할 여유가 생기면 텍스트를 통해 메뉴를 긁어올 수 있으나, 매출 기록을 남기지는 않는다.

2. 메인 화면
테이블이 라벨로 총 20개가 구현되어있으며, 라벨을 클릭 시 주문한 메뉴를 좌측에 출력한다.

라벨을 클릭 시 좌측 ListView에 해당 테이블의 메뉴를 출력, 라벨 뒤에는 ListView가 있으며, 주문한 메뉴를 저장함
ㄴ 개선?: ListView를 넣었더니 프로그램 동작이 조금 더딘 느낌이 듬.
ㄴ 해소를 위해 해당 데이터를 DataSet으로 관리

라벨을 더블 클릭 시 2.1 폼을 출력, 메뉴를 선택하고 확인을 누르면 해당 테이블 ListView에 항목이 추가된다.

메뉴 관리 버튼을 누를 시 2.2 폼을 출력, SQL 메뉴 데이터베이스에 메뉴를 삽입하거나 제거하는 기능을 넣는다.

결제 버튼을 누를 시 2.3폼을 출력, 현재 타겟이 되어있는 테이블의 (좌측 ListView) 결제를 진행한다

매출 관리 버튼을 누를 시 2.4폼을 출력, 금일 매출 기록 등을 DB로부터 조회해서 DataGridView에 출력한다.
날짜를 지정해서 조회가 가능하도록 유도한다.

영수 기록 등의 추가 기능은 구현을 할 여유가 있을 시 추가 구현

2.1. 음식 주문 (설계 완료)
인터페이스는 우측에 메뉴를 표시하는 DataGridView, 좌측에 현 메뉴를 표시하는 ListView
DataSet과 DataGridView를 통해 SQL로부터 메뉴를 읽어오고, 해당 메뉴를 View에 출력한다
ListView는 클릭한 테이블에 맞는 ListView의 아이템을 읽어서 아이템으로 추가한다

메뉴를 더블 클릭하면 해당 메뉴의 정보를 읽어 좌측 ListView에 아이템을 추가한다
ListView의 아이템을 더블 클릭하면 해당 Item을 제거한다.

우측에는 확인과 취소 버튼
취소 버튼을 누를 시 폼을 닫는다
확인 버튼을 누를 시 해당 ListView의 아이템들로 부모폼의 ListView를 갱신한다.

2.2 메뉴 관리
인터페이스는 DataGridView와, 메뉴 추가 관련 내용을 입력할 수 있는 텍스트 박스들, 추가, 제거 버튼과 나가기 버튼
메뉴 관련 내용은 메뉴 이름, 가격, 판매 순 이익 정도가 고려될 수 있다.

텍스트 박스에 메뉴들을 넣고 추가 버튼을 누르면 SQL에 해당 내용을 추가하고 DataGridView의 데이터에 해당 내용을 추가한다.

DataGridView의 메뉴를 선택하고 제거 버튼을 누르면 focus된 메뉴의 이름과 대조해서, SQL에서 해당 내용을 제거하고
DataGridView의 데이터에서도 해당 내용을 제거한다.

나가기 버튼은 폼을 닫는다.

2.3 결제 버튼
인터페이스는 결제 금액 TextBox (ReadOnly), 할인 금액 TextBox, 지불 금액 TextBox(), 거스름 돈 TextBox()
지불 금액을 입력하기 위한 Button (숫자 0~9, 00과 000 총 12개), 지불 금액에 대한 확인 버튼.
결제 버튼과 취소 버튼

결제 금액은 좌측 ListView의 모든 메뉴의 값을 더한 것이 출력된다.
할인 금액은 할인 기능을 추가했을 때만 생성할 예정.
지불 금액은 버튼을 통해 / 혹은 타이핑을 통해 입력 받는다.
거스름돈은 지불 금액 - 결제 금액을 출력한다

결제 버튼을 누르면 고유 번호(결제순서)와 결제 시간:분 정보, 주문한 메뉴 리스트, 결제 금액 등이 일일매출 DB에 기록된다.
동시의 부모의 좌측 리스트뷰와, 타겟이 되었던 리스트 뷰 (테이블 리스트 뷰), 테이블 금전 정보를 초기화한다.

2.4 매출 관리
인터페이스는 날짜를 입력하기 위한 년-월-일 TextBox
DB의 내용을 읽고 출력하기 위한 DataGridView
불러오기 버튼과 나가기 버튼이 존재

2.5
